{"version":3,"sources":["scripts/header.js"],"names":["loadCSS","href","before","media","callback","toggleMedia","defined","i","sheets","length","indexOf","ss","setTimeout","window","document","createElement","ref","getElementsByTagName","styleSheets","rel","onload","parentNode","insertBefore","Modernizr","undefined","setCss","str","mStyle","cssText","setCssAll","str1","str2","prefixes","join","is","obj","type","contains","substr","testProps","props","prefixed","prop","testDOMProps","elem","item","bind","testPropsAll","ucProp","charAt","toUpperCase","slice","cssomPrefixes","split","webforms","len","attrs","inputElem","list","HTMLDataListElement","bool","inputElemType","defaultView","setAttribute","value","smile","style","test","WebkitAppearance","docElement","appendChild","getComputedStyle","offsetHeight","removeChild","checkValidity","inputs","featureName","hasOwnProp","version","enableClasses","documentElement","mod","modElem","toString","omPrefixes","domPrefixes","toLowerCase","ns","svg","tests","classes","injectElementWithStyles","rule","nodes","testnames","ret","node","docOverflow","div","body","fakeBody","parseInt","id","innerHTML","background","overflow","testMediaQuery","mq","matchMedia","msMatchMedia","matches","currentStyle","isEventSupported","eventName","element","TAGNAMES","isSupported","removeAttribute","select","change","submit","reset","error","load","abort","_hasOwnProperty","hasOwnProperty","call","object","property","constructor","prototype","Function","that","target","this","TypeError","args","arguments","bound","F","self","result","apply","concat","Object","getContext","fillText","WebGLRenderingContext","DocumentTouch","offsetTop","navigator","postMessage","openDatabase","documentMode","history","pushState","backgroundColor","textShadow","opacity","str3","backgroundImage","offsetLeft","getElementById","sheet","styleSheet","cssRules","canPlayType","Boolean","ogg","replace","h264","webm","e","mp3","wav","m4a","localStorage","setItem","removeItem","sessionStorage","Worker","applicationCache","createElementNS","createSVGRect","firstChild","namespaceURI","feature","push","input","addTest","key","className","addStyleSheet","ownerDocument","p","parent","lastChild","getElements","elements","html5","getExpandoData","data","expandoData","expando","expanID","nodeName","supportsUnknownElements","cache","cloneNode","saveClones","createElem","canHaveChildren","reSkip","tagUrn","frag","createDocumentFragment","clone","elems","l","shivMethods","createFrag","shivDocument","shivCSS","supportsHtml5Styles","hasCSS","options","a","childNodes","_version","_prefixes","_domPrefixes","_cssomPrefixes","hasEvent","testProp","testAllProps","testStyles"],"mappings":"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","file":"scripts/header.js","sourcesContent":["/*!\n * Modernizr v2.8.3\n * www.modernizr.com\n *\n * Copyright (c) Faruk Ates, Paul Irish, Alex Sexton\n * Available under the BSD and MIT licenses: www.modernizr.com/license/\n */\n\n/*\n * Modernizr tests which native CSS3 and HTML5 features are available in\n * the current UA and makes the results available to you in two ways:\n * as properties on a global Modernizr object, and as classes on the\n * <html> element. This information allows you to progressively enhance\n * your pages with a granular level of control over the experience.\n *\n * Modernizr has an optional (not included) conditional resource loader\n * called Modernizr.load(), based on Yepnope.js (yepnopejs.com).\n * To get a build that includes Modernizr.load(), as well as choosing\n * which tests to include, go to www.modernizr.com/download/\n *\n * Authors        Faruk Ates, Paul Irish, Alex Sexton\n * Contributors   Ryan Seddon, Ben Alman\n */\n\nwindow.Modernizr = (function( window, document, undefined ) {\n\n    var version = '2.8.3',\n\n    Modernizr = {},\n\n    /*>>cssclasses*/\n    // option for enabling the HTML classes to be added\n    enableClasses = true,\n    /*>>cssclasses*/\n\n    docElement = document.documentElement,\n\n    /**\n     * Create our \"modernizr\" element that we do most feature tests on.\n     */\n    mod = 'modernizr',\n    modElem = document.createElement(mod),\n    mStyle = modElem.style,\n\n    /**\n     * Create the input element for various Web Forms feature tests.\n     */\n    inputElem /*>>inputelem*/ = document.createElement('input') /*>>inputelem*/ ,\n\n    /*>>smile*/\n    smile = ':)',\n    /*>>smile*/\n\n    toString = {}.toString,\n\n    // TODO :: make the prefixes more granular\n    /*>>prefixes*/\n    // List of property values to set for css tests. See ticket #21\n    prefixes = ' -webkit- -moz- -o- -ms- '.split(' '),\n    /*>>prefixes*/\n\n    /*>>domprefixes*/\n    // Following spec is to expose vendor-specific style properties as:\n    //   elem.style.WebkitBorderRadius\n    // and the following would be incorrect:\n    //   elem.style.webkitBorderRadius\n\n    // Webkit ghosts their properties in lowercase but Opera & Moz do not.\n    // Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+\n    //   erik.eae.net/archives/2008/03/10/21.48.10/\n\n    // More here: github.com/Modernizr/Modernizr/issues/issue/21\n    omPrefixes = 'Webkit Moz O ms',\n\n    cssomPrefixes = omPrefixes.split(' '),\n\n    domPrefixes = omPrefixes.toLowerCase().split(' '),\n    /*>>domprefixes*/\n\n    /*>>ns*/\n    ns = {'svg': 'http://www.w3.org/2000/svg'},\n    /*>>ns*/\n\n    tests = {},\n    inputs = {},\n    attrs = {},\n\n    classes = [],\n\n    slice = classes.slice,\n\n    featureName, // used in testing loop\n\n\n    /*>>teststyles*/\n    // Inject element with style element and some CSS rules\n    injectElementWithStyles = function( rule, callback, nodes, testnames ) {\n\n      var style, ret, node, docOverflow,\n          div = document.createElement('div'),\n          // After page load injecting a fake body doesn't work so check if body exists\n          body = document.body,\n          // IE6 and 7 won't return offsetWidth or offsetHeight unless it's in the body element, so we fake it.\n          fakeBody = body || document.createElement('body');\n\n      if ( parseInt(nodes, 10) ) {\n          // In order not to give false positives we create a node for each test\n          // This also allows the method to scale for unspecified uses\n          while ( nodes-- ) {\n              node = document.createElement('div');\n              node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\n              div.appendChild(node);\n          }\n      }\n\n      // <style> elements in IE6-9 are considered 'NoScope' elements and therefore will be removed\n      // when injected with innerHTML. To get around this you need to prepend the 'NoScope' element\n      // with a 'scoped' element, in our case the soft-hyphen entity as it won't mess with our measurements.\n      // msdn.microsoft.com/en-us/library/ms533897%28VS.85%29.aspx\n      // Documents served as xml will throw if using &shy; so use xml friendly encoded version. See issue #277\n      style = ['&#173;','<style id=\"s', mod, '\">', rule, '</style>'].join('');\n      div.id = mod;\n      // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\n      // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\n      (body ? div : fakeBody).innerHTML += style;\n      fakeBody.appendChild(div);\n      if ( !body ) {\n          //avoid crashing IE8, if background image is used\n          fakeBody.style.background = '';\n          //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\n          fakeBody.style.overflow = 'hidden';\n          docOverflow = docElement.style.overflow;\n          docElement.style.overflow = 'hidden';\n          docElement.appendChild(fakeBody);\n      }\n\n      ret = callback(div, rule);\n      // If this is done after page load we don't want to remove the body so check if body exists\n      if ( !body ) {\n          fakeBody.parentNode.removeChild(fakeBody);\n          docElement.style.overflow = docOverflow;\n      } else {\n          div.parentNode.removeChild(div);\n      }\n\n      return !!ret;\n\n    },\n    /*>>teststyles*/\n\n    /*>>mq*/\n    // adapted from matchMedia polyfill\n    // by Scott Jehl and Paul Irish\n    // gist.github.com/786768\n    testMediaQuery = function( mq ) {\n\n      var matchMedia = window.matchMedia || window.msMatchMedia;\n      if ( matchMedia ) {\n        return matchMedia(mq) && matchMedia(mq).matches || false;\n      }\n\n      var bool;\n\n      injectElementWithStyles('@media ' + mq + ' { #' + mod + ' { position: absolute; } }', function( node ) {\n        bool = (window.getComputedStyle ?\n                  getComputedStyle(node, null) :\n                  node.currentStyle)['position'] == 'absolute';\n      });\n\n      return bool;\n\n     },\n     /*>>mq*/\n\n\n    /*>>hasevent*/\n    //\n    // isEventSupported determines if a given element supports the given event\n    // kangax.github.com/iseventsupported/\n    //\n    // The following results are known incorrects:\n    //   Modernizr.hasEvent(\"webkitTransitionEnd\", elem) // false negative\n    //   Modernizr.hasEvent(\"textInput\") // in Webkit. github.com/Modernizr/Modernizr/issues/333\n    //   ...\n    isEventSupported = (function() {\n\n      var TAGNAMES = {\n        'select': 'input', 'change': 'input',\n        'submit': 'form', 'reset': 'form',\n        'error': 'img', 'load': 'img', 'abort': 'img'\n      };\n\n      function isEventSupported( eventName, element ) {\n\n        element = element || document.createElement(TAGNAMES[eventName] || 'div');\n        eventName = 'on' + eventName;\n\n        // When using `setAttribute`, IE skips \"unload\", WebKit skips \"unload\" and \"resize\", whereas `in` \"catches\" those\n        var isSupported = eventName in element;\n\n        if ( !isSupported ) {\n          // If it has no `setAttribute` (i.e. doesn't implement Node interface), try generic element\n          if ( !element.setAttribute ) {\n            element = document.createElement('div');\n          }\n          if ( element.setAttribute && element.removeAttribute ) {\n            element.setAttribute(eventName, '');\n            isSupported = is(element[eventName], 'function');\n\n            // If property was created, \"remove it\" (by setting value to `undefined`)\n            if ( !is(element[eventName], 'undefined') ) {\n              element[eventName] = undefined;\n            }\n            element.removeAttribute(eventName);\n          }\n        }\n\n        element = null;\n        return isSupported;\n      }\n      return isEventSupported;\n    })(),\n    /*>>hasevent*/\n\n    // TODO :: Add flag for hasownprop ? didn't last time\n\n    // hasOwnProperty shim by kangax needed for Safari 2.0 support\n    _hasOwnProperty = ({}).hasOwnProperty, hasOwnProp;\n\n    if ( !is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined') ) {\n      hasOwnProp = function (object, property) {\n        return _hasOwnProperty.call(object, property);\n      };\n    }\n    else {\n      hasOwnProp = function (object, property) { /* yes, this can give false positives/negatives, but most of the time we don't care about those */\n        return ((property in object) && is(object.constructor.prototype[property], 'undefined'));\n      };\n    }\n\n    // Adapted from ES5-shim https://github.com/kriskowal/es5-shim/blob/master/es5-shim.js\n    // es5.github.com/#x15.3.4.5\n\n    if (!Function.prototype.bind) {\n      Function.prototype.bind = function bind(that) {\n\n        var target = this;\n\n        if (typeof target != \"function\") {\n            throw new TypeError();\n        }\n\n        var args = slice.call(arguments, 1),\n            bound = function () {\n\n            if (this instanceof bound) {\n\n              var F = function(){};\n              F.prototype = target.prototype;\n              var self = new F();\n\n              var result = target.apply(\n                  self,\n                  args.concat(slice.call(arguments))\n              );\n              if (Object(result) === result) {\n                  return result;\n              }\n              return self;\n\n            } else {\n\n              return target.apply(\n                  that,\n                  args.concat(slice.call(arguments))\n              );\n\n            }\n\n        };\n\n        return bound;\n      };\n    }\n\n    /**\n     * setCss applies given styles to the Modernizr DOM node.\n     */\n    function setCss( str ) {\n        mStyle.cssText = str;\n    }\n\n    /**\n     * setCssAll extrapolates all vendor-specific css strings.\n     */\n    function setCssAll( str1, str2 ) {\n        return setCss(prefixes.join(str1 + ';') + ( str2 || '' ));\n    }\n\n    /**\n     * is returns a boolean for if typeof obj is exactly type.\n     */\n    function is( obj, type ) {\n        return typeof obj === type;\n    }\n\n    /**\n     * contains returns a boolean for if substr is found within str.\n     */\n    function contains( str, substr ) {\n        return !!~('' + str).indexOf(substr);\n    }\n\n    /*>>testprop*/\n\n    // testProps is a generic CSS / DOM property test.\n\n    // In testing support for a given CSS property, it's legit to test:\n    //    `elem.style[styleName] !== undefined`\n    // If the property is supported it will return an empty string,\n    // if unsupported it will return undefined.\n\n    // We'll take advantage of this quick test and skip setting a style\n    // on our modernizr element, but instead just testing undefined vs\n    // empty string.\n\n    // Because the testing of the CSS property names (with \"-\", as\n    // opposed to the camelCase DOM properties) is non-portable and\n    // non-standard but works in WebKit and IE (but not Gecko or Opera),\n    // we explicitly reject properties with dashes so that authors\n    // developing in WebKit or IE first don't end up with\n    // browser-specific content by accident.\n\n    function testProps( props, prefixed ) {\n        for ( var i in props ) {\n            var prop = props[i];\n            if ( !contains(prop, \"-\") && mStyle[prop] !== undefined ) {\n                return prefixed == 'pfx' ? prop : true;\n            }\n        }\n        return false;\n    }\n    /*>>testprop*/\n\n    // TODO :: add testDOMProps\n    /**\n     * testDOMProps is a generic DOM property test; if a browser supports\n     *   a certain property, it won't return undefined for it.\n     */\n    function testDOMProps( props, obj, elem ) {\n        for ( var i in props ) {\n            var item = obj[props[i]];\n            if ( item !== undefined) {\n\n                // return the property name as a string\n                if (elem === false) return props[i];\n\n                // let's bind a function\n                if (is(item, 'function')){\n                  // default to autobind unless override\n                  return item.bind(elem || obj);\n                }\n\n                // return the unbound function or obj or value\n                return item;\n            }\n        }\n        return false;\n    }\n\n    /*>>testallprops*/\n    /**\n     * testPropsAll tests a list of DOM properties we want to check against.\n     *   We specify literally ALL possible (known and/or likely) properties on\n     *   the element including the non-vendor prefixed one, for forward-\n     *   compatibility.\n     */\n    function testPropsAll( prop, prefixed, elem ) {\n\n        var ucProp  = prop.charAt(0).toUpperCase() + prop.slice(1),\n            props   = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');\n\n        // did they call .prefixed('boxSizing') or are we just testing a prop?\n        if(is(prefixed, \"string\") || is(prefixed, \"undefined\")) {\n          return testProps(props, prefixed);\n\n        // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])\n        } else {\n          props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');\n          return testDOMProps(props, prefixed, elem);\n        }\n    }\n    /*>>testallprops*/\n\n\n    /**\n     * Tests\n     * -----\n     */\n\n    // The *new* flexbox\n    // dev.w3.org/csswg/css3-flexbox\n\n    tests['flexbox'] = function() {\n      return testPropsAll('flexWrap');\n    };\n\n    // The *old* flexbox\n    // www.w3.org/TR/2009/WD-css3-flexbox-20090723/\n\n    tests['flexboxlegacy'] = function() {\n        return testPropsAll('boxDirection');\n    };\n\n    // On the S60 and BB Storm, getContext exists, but always returns undefined\n    // so we actually have to call getContext() to verify\n    // github.com/Modernizr/Modernizr/issues/issue/97/\n\n    tests['canvas'] = function() {\n        var elem = document.createElement('canvas');\n        return !!(elem.getContext && elem.getContext('2d'));\n    };\n\n    tests['canvastext'] = function() {\n        return !!(Modernizr['canvas'] && is(document.createElement('canvas').getContext('2d').fillText, 'function'));\n    };\n\n    // webk.it/70117 is tracking a legit WebGL feature detect proposal\n\n    // We do a soft detect which may false positive in order to avoid\n    // an expensive context creation: bugzil.la/732441\n\n    tests['webgl'] = function() {\n        return !!window.WebGLRenderingContext;\n    };\n\n    /*\n     * The Modernizr.touch test only indicates if the browser supports\n     *    touch events, which does not necessarily reflect a touchscreen\n     *    device, as evidenced by tablets running Windows 7 or, alas,\n     *    the Palm Pre / WebOS (touch) phones.\n     *\n     * Additionally, Chrome (desktop) used to lie about its support on this,\n     *    but that has since been rectified: crbug.com/36415\n     *\n     * We also test for Firefox 4 Multitouch Support.\n     *\n     * For more info, see: modernizr.github.com/Modernizr/touch.html\n     */\n\n    tests['touch'] = function() {\n        var bool;\n\n        if(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {\n          bool = true;\n        } else {\n          injectElementWithStyles(['@media (',prefixes.join('touch-enabled),('),mod,')','{#modernizr{top:9px;position:absolute}}'].join(''), function( node ) {\n            bool = node.offsetTop === 9;\n          });\n        }\n\n        return bool;\n    };\n\n\n    // geolocation is often considered a trivial feature detect...\n    // Turns out, it's quite tricky to get right:\n    //\n    // Using !!navigator.geolocation does two things we don't want. It:\n    //   1. Leaks memory in IE9: github.com/Modernizr/Modernizr/issues/513\n    //   2. Disables page caching in WebKit: webk.it/43956\n    //\n    // Meanwhile, in Firefox < 8, an about:config setting could expose\n    // a false positive that would throw an exception: bugzil.la/688158\n\n    tests['geolocation'] = function() {\n        return 'geolocation' in navigator;\n    };\n\n\n    tests['postmessage'] = function() {\n      return !!window.postMessage;\n    };\n\n\n    // Chrome incognito mode used to throw an exception when using openDatabase\n    // It doesn't anymore.\n    tests['websqldatabase'] = function() {\n      return !!window.openDatabase;\n    };\n\n    // Vendors had inconsistent prefixing with the experimental Indexed DB:\n    // - Webkit's implementation is accessible through webkitIndexedDB\n    // - Firefox shipped moz_indexedDB before FF4b9, but since then has been mozIndexedDB\n    // For speed, we don't test the legacy (and beta-only) indexedDB\n    tests['indexedDB'] = function() {\n      return !!testPropsAll(\"indexedDB\", window);\n    };\n\n    // documentMode logic from YUI to filter out IE8 Compat Mode\n    //   which false positives.\n    tests['hashchange'] = function() {\n      return isEventSupported('hashchange', window) && (document.documentMode === undefined || document.documentMode > 7);\n    };\n\n    // Per 1.6:\n    // This used to be Modernizr.historymanagement but the longer\n    // name has been deprecated in favor of a shorter and property-matching one.\n    // The old API is still available in 1.6, but as of 2.0 will throw a warning,\n    // and in the first release thereafter disappear entirely.\n    tests['history'] = function() {\n      return !!(window.history && history.pushState);\n    };\n\n    tests['draganddrop'] = function() {\n        var div = document.createElement('div');\n        return ('draggable' in div) || ('ondragstart' in div && 'ondrop' in div);\n    };\n\n    // FF3.6 was EOL'ed on 4/24/12, but the ESR version of FF10\n    // will be supported until FF19 (2/12/13), at which time, ESR becomes FF17.\n    // FF10 still uses prefixes, so check for it until then.\n    // for more ESR info, see: mozilla.org/en-US/firefox/organizations/faq/\n    tests['websockets'] = function() {\n        return 'WebSocket' in window || 'MozWebSocket' in window;\n    };\n\n\n    // css-tricks.com/rgba-browser-support/\n    tests['rgba'] = function() {\n        // Set an rgba() color and check the returned value\n\n        setCss('background-color:rgba(150,255,150,.5)');\n\n        return contains(mStyle.backgroundColor, 'rgba');\n    };\n\n    tests['hsla'] = function() {\n        // Same as rgba(), in fact, browsers re-map hsla() to rgba() internally,\n        //   except IE9 who retains it as hsla\n\n        setCss('background-color:hsla(120,40%,100%,.5)');\n\n        return contains(mStyle.backgroundColor, 'rgba') || contains(mStyle.backgroundColor, 'hsla');\n    };\n\n    tests['multiplebgs'] = function() {\n        // Setting multiple images AND a color on the background shorthand property\n        //  and then querying the style.background property value for the number of\n        //  occurrences of \"url(\" is a reliable method for detecting ACTUAL support for this!\n\n        setCss('background:url(https://),url(https://),red url(https://)');\n\n        // If the UA supports multiple backgrounds, there should be three occurrences\n        //   of the string \"url(\" in the return value for elemStyle.background\n\n        return (/(url\\s*\\(.*?){3}/).test(mStyle.background);\n    };\n\n\n\n    // this will false positive in Opera Mini\n    //   github.com/Modernizr/Modernizr/issues/396\n\n    tests['backgroundsize'] = function() {\n        return testPropsAll('backgroundSize');\n    };\n\n    tests['borderimage'] = function() {\n        return testPropsAll('borderImage');\n    };\n\n\n    // Super comprehensive table about all the unique implementations of\n    // border-radius: muddledramblings.com/table-of-css3-border-radius-compliance\n\n    tests['borderradius'] = function() {\n        return testPropsAll('borderRadius');\n    };\n\n    // WebOS unfortunately false positives on this test.\n    tests['boxshadow'] = function() {\n        return testPropsAll('boxShadow');\n    };\n\n    // FF3.0 will false positive on this test\n    tests['textshadow'] = function() {\n        return document.createElement('div').style.textShadow === '';\n    };\n\n\n    tests['opacity'] = function() {\n        // Browsers that actually have CSS Opacity implemented have done so\n        //  according to spec, which means their return values are within the\n        //  range of [0.0,1.0] - including the leading zero.\n\n        setCssAll('opacity:.55');\n\n        // The non-literal . in this regex is intentional:\n        //   German Chrome returns this value as 0,55\n        // github.com/Modernizr/Modernizr/issues/#issue/59/comment/516632\n        return (/^0.55$/).test(mStyle.opacity);\n    };\n\n\n    // Note, Android < 4 will pass this test, but can only animate\n    //   a single property at a time\n    //   goo.gl/v3V4Gp\n    tests['cssanimations'] = function() {\n        return testPropsAll('animationName');\n    };\n\n\n    tests['csscolumns'] = function() {\n        return testPropsAll('columnCount');\n    };\n\n\n    tests['cssgradients'] = function() {\n        /**\n         * For CSS Gradients syntax, please see:\n         * webkit.org/blog/175/introducing-css-gradients/\n         * developer.mozilla.org/en/CSS/-moz-linear-gradient\n         * developer.mozilla.org/en/CSS/-moz-radial-gradient\n         * dev.w3.org/csswg/css3-images/#gradients-\n         */\n\n        var str1 = 'background-image:',\n            str2 = 'gradient(linear,left top,right bottom,from(#9f9),to(white));',\n            str3 = 'linear-gradient(left top,#9f9, white);';\n\n        setCss(\n             // legacy webkit syntax (FIXME: remove when syntax not in use anymore)\n              (str1 + '-webkit- '.split(' ').join(str2 + str1) +\n             // standard syntax             // trailing 'background-image:'\n              prefixes.join(str3 + str1)).slice(0, -str1.length)\n        );\n\n        return contains(mStyle.backgroundImage, 'gradient');\n    };\n\n\n    tests['cssreflections'] = function() {\n        return testPropsAll('boxReflect');\n    };\n\n\n    tests['csstransforms'] = function() {\n        return !!testPropsAll('transform');\n    };\n\n\n    tests['csstransforms3d'] = function() {\n\n        var ret = !!testPropsAll('perspective');\n\n        // Webkit's 3D transforms are passed off to the browser's own graphics renderer.\n        //   It works fine in Safari on Leopard and Snow Leopard, but not in Chrome in\n        //   some conditions. As a result, Webkit typically recognizes the syntax but\n        //   will sometimes throw a false positive, thus we must do a more thorough check:\n        if ( ret && 'webkitPerspective' in docElement.style ) {\n\n          // Webkit allows this media query to succeed only if the feature is enabled.\n          // `@media (transform-3d),(-webkit-transform-3d){ ... }`\n          injectElementWithStyles('@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}', function( node, rule ) {\n            ret = node.offsetLeft === 9 && node.offsetHeight === 3;\n          });\n        }\n        return ret;\n    };\n\n\n    tests['csstransitions'] = function() {\n        return testPropsAll('transition');\n    };\n\n\n    /*>>fontface*/\n    // @font-face detection routine by Diego Perini\n    // javascript.nwbox.com/CSSSupport/\n\n    // false positives:\n    //   WebOS github.com/Modernizr/Modernizr/issues/342\n    //   WP7   github.com/Modernizr/Modernizr/issues/538\n    tests['fontface'] = function() {\n        var bool;\n\n        injectElementWithStyles('@font-face {font-family:\"font\";src:url(\"https://\")}', function( node, rule ) {\n          var style = document.getElementById('smodernizr'),\n              sheet = style.sheet || style.styleSheet,\n              cssText = sheet ? (sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].cssText : sheet.cssText || '') : '';\n\n          bool = /src/i.test(cssText) && cssText.indexOf(rule.split(' ')[0]) === 0;\n        });\n\n        return bool;\n    };\n    /*>>fontface*/\n\n    // CSS generated content detection\n    tests['generatedcontent'] = function() {\n        var bool;\n\n        injectElementWithStyles(['#',mod,'{font:0/0 a}#',mod,':after{content:\"',smile,'\";visibility:hidden;font:3px/1 a}'].join(''), function( node ) {\n          bool = node.offsetHeight >= 3;\n        });\n\n        return bool;\n    };\n\n\n\n    // These tests evaluate support of the video/audio elements, as well as\n    // testing what types of content they support.\n    //\n    // We're using the Boolean constructor here, so that we can extend the value\n    // e.g.  Modernizr.video     // true\n    //       Modernizr.video.ogg // 'probably'\n    //\n    // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845\n    //                     thx to NielsLeenheer and zcorpan\n\n    // Note: in some older browsers, \"no\" was a return value instead of empty string.\n    //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2\n    //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5\n\n    tests['video'] = function() {\n        var elem = document.createElement('video'),\n            bool = false;\n\n        // IE9 Running on Windows Server SKU can cause an exception to be thrown, bug #224\n        try {\n            if ( bool = !!elem.canPlayType ) {\n                bool      = new Boolean(bool);\n                bool.ogg  = elem.canPlayType('video/ogg; codecs=\"theora\"')      .replace(/^no$/,'');\n\n                // Without QuickTime, this value will be `undefined`. github.com/Modernizr/Modernizr/issues/546\n                bool.h264 = elem.canPlayType('video/mp4; codecs=\"avc1.42E01E\"') .replace(/^no$/,'');\n\n                bool.webm = elem.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/^no$/,'');\n            }\n\n        } catch(e) { }\n\n        return bool;\n    };\n\n    tests['audio'] = function() {\n        var elem = document.createElement('audio'),\n            bool = false;\n\n        try {\n            if ( bool = !!elem.canPlayType ) {\n                bool      = new Boolean(bool);\n                bool.ogg  = elem.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/,'');\n                bool.mp3  = elem.canPlayType('audio/mpeg;')               .replace(/^no$/,'');\n\n                // Mimetypes accepted:\n                //   developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements\n                //   bit.ly/iphoneoscodecs\n                bool.wav  = elem.canPlayType('audio/wav; codecs=\"1\"')     .replace(/^no$/,'');\n                bool.m4a  = ( elem.canPlayType('audio/x-m4a;')            ||\n                              elem.canPlayType('audio/aac;'))             .replace(/^no$/,'');\n            }\n        } catch(e) { }\n\n        return bool;\n    };\n\n\n    // In FF4, if disabled, window.localStorage should === null.\n\n    // Normally, we could not test that directly and need to do a\n    //   `('localStorage' in window) && ` test first because otherwise Firefox will\n    //   throw bugzil.la/365772 if cookies are disabled\n\n    // Also in iOS5 Private Browsing mode, attempting to use localStorage.setItem\n    // will throw the exception:\n    //   QUOTA_EXCEEDED_ERRROR DOM Exception 22.\n    // Peculiarly, getItem and removeItem calls do not throw.\n\n    // Because we are forced to try/catch this, we'll go aggressive.\n\n    // Just FWIW: IE8 Compat mode supports these features completely:\n    //   www.quirksmode.org/dom/html5.html\n    // But IE8 doesn't support either with local files\n\n    tests['localstorage'] = function() {\n        try {\n            localStorage.setItem(mod, mod);\n            localStorage.removeItem(mod);\n            return true;\n        } catch(e) {\n            return false;\n        }\n    };\n\n    tests['sessionstorage'] = function() {\n        try {\n            sessionStorage.setItem(mod, mod);\n            sessionStorage.removeItem(mod);\n            return true;\n        } catch(e) {\n            return false;\n        }\n    };\n\n\n    tests['webworkers'] = function() {\n        return !!window.Worker;\n    };\n\n\n    tests['applicationcache'] = function() {\n        return !!window.applicationCache;\n    };\n\n\n    // Thanks to Erik Dahlstrom\n    tests['svg'] = function() {\n        return !!document.createElementNS && !!document.createElementNS(ns.svg, 'svg').createSVGRect;\n    };\n\n    // specifically for SVG inline in HTML, not within XHTML\n    // test page: paulirish.com/demo/inline-svg\n    tests['inlinesvg'] = function() {\n      var div = document.createElement('div');\n      div.innerHTML = '<svg/>';\n      return (div.firstChild && div.firstChild.namespaceURI) == ns.svg;\n    };\n\n    // SVG SMIL animation\n    tests['smil'] = function() {\n        return !!document.createElementNS && /SVGAnimate/.test(toString.call(document.createElementNS(ns.svg, 'animate')));\n    };\n\n    // This test is only for clip paths in SVG proper, not clip paths on HTML content\n    // demo: srufaculty.sru.edu/david.dailey/svg/newstuff/clipPath4.svg\n\n    // However read the comments to dig into applying SVG clippaths to HTML content here:\n    //   github.com/Modernizr/Modernizr/issues/213#issuecomment-1149491\n    tests['svgclippaths'] = function() {\n        return !!document.createElementNS && /SVGClipPath/.test(toString.call(document.createElementNS(ns.svg, 'clipPath')));\n    };\n\n    /*>>webforms*/\n    // input features and input types go directly onto the ret object, bypassing the tests loop.\n    // Hold this guy to execute in a moment.\n    function webforms() {\n        /*>>input*/\n        // Run through HTML5's new input attributes to see if the UA understands any.\n        // We're using f which is the <input> element created early on\n        // Mike Taylr has created a comprehensive resource for testing these attributes\n        //   when applied to all input types:\n        //   miketaylr.com/code/input-type-attr.html\n        // spec: www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n\n        // Only input placeholder is tested while textarea's placeholder is not.\n        // Currently Safari 4 and Opera 11 have support only for the input placeholder\n        // Both tests are available in feature-detects/forms-placeholder.js\n        Modernizr['input'] = (function( props ) {\n            for ( var i = 0, len = props.length; i < len; i++ ) {\n                attrs[ props[i] ] = !!(props[i] in inputElem);\n            }\n            if (attrs.list){\n              // safari false positive's on datalist: webk.it/74252\n              // see also github.com/Modernizr/Modernizr/issues/146\n              attrs.list = !!(document.createElement('datalist') && window.HTMLDataListElement);\n            }\n            return attrs;\n        })('autocomplete autofocus list placeholder max min multiple pattern required step'.split(' '));\n        /*>>input*/\n\n        /*>>inputtypes*/\n        // Run through HTML5's new input types to see if the UA understands any.\n        //   This is put behind the tests runloop because it doesn't return a\n        //   true/false like all the other tests; instead, it returns an object\n        //   containing each input type with its corresponding true/false value\n\n        // Big thanks to @miketaylr for the html5 forms expertise. miketaylr.com/\n        Modernizr['inputtypes'] = (function(props) {\n\n            for ( var i = 0, bool, inputElemType, defaultView, len = props.length; i < len; i++ ) {\n\n                inputElem.setAttribute('type', inputElemType = props[i]);\n                bool = inputElem.type !== 'text';\n\n                // We first check to see if the type we give it sticks..\n                // If the type does, we feed it a textual value, which shouldn't be valid.\n                // If the value doesn't stick, we know there's input sanitization which infers a custom UI\n                if ( bool ) {\n\n                    inputElem.value         = smile;\n                    inputElem.style.cssText = 'position:absolute;visibility:hidden;';\n\n                    if ( /^range$/.test(inputElemType) && inputElem.style.WebkitAppearance !== undefined ) {\n\n                      docElement.appendChild(inputElem);\n                      defaultView = document.defaultView;\n\n                      // Safari 2-4 allows the smiley as a value, despite making a slider\n                      bool =  defaultView.getComputedStyle &&\n                              defaultView.getComputedStyle(inputElem, null).WebkitAppearance !== 'textfield' &&\n                              // Mobile android web browser has false positive, so must\n                              // check the height to see if the widget is actually there.\n                              (inputElem.offsetHeight !== 0);\n\n                      docElement.removeChild(inputElem);\n\n                    } else if ( /^(search|tel)$/.test(inputElemType) ){\n                      // Spec doesn't define any special parsing or detectable UI\n                      //   behaviors so we pass these through as true\n\n                      // Interestingly, opera fails the earlier test, so it doesn't\n                      //  even make it here.\n\n                    } else if ( /^(url|email)$/.test(inputElemType) ) {\n                      // Real url and email support comes with prebaked validation.\n                      bool = inputElem.checkValidity && inputElem.checkValidity() === false;\n\n                    } else {\n                      // If the upgraded input compontent rejects the :) text, we got a winner\n                      bool = inputElem.value != smile;\n                    }\n                }\n\n                inputs[ props[i] ] = !!bool;\n            }\n            return inputs;\n        })('search tel url email datetime date month week time datetime-local number range color'.split(' '));\n        /*>>inputtypes*/\n    }\n    /*>>webforms*/\n\n\n    // End of test definitions\n    // -----------------------\n\n\n\n    // Run through all tests and detect their support in the current UA.\n    // todo: hypothetically we could be doing an array of tests and use a basic loop here.\n    for ( var feature in tests ) {\n        if ( hasOwnProp(tests, feature) ) {\n            // run the test, throw the return value into the Modernizr,\n            //   then based on that boolean, define an appropriate className\n            //   and push it into an array of classes we'll join later.\n            featureName  = feature.toLowerCase();\n            Modernizr[featureName] = tests[feature]();\n\n            classes.push((Modernizr[featureName] ? '' : 'no-') + featureName);\n        }\n    }\n\n    /*>>webforms*/\n    // input tests need to run.\n    Modernizr.input || webforms();\n    /*>>webforms*/\n\n\n    /**\n     * addTest allows the user to define their own feature tests\n     * the result will be added onto the Modernizr object,\n     * as well as an appropriate className set on the html element\n     *\n     * @param feature - String naming the feature\n     * @param test - Function returning true if feature is supported, false if not\n     */\n     Modernizr.addTest = function ( feature, test ) {\n       if ( typeof feature == 'object' ) {\n         for ( var key in feature ) {\n           if ( hasOwnProp( feature, key ) ) {\n             Modernizr.addTest( key, feature[ key ] );\n           }\n         }\n       } else {\n\n         feature = feature.toLowerCase();\n\n         if ( Modernizr[feature] !== undefined ) {\n           // we're going to quit if you're trying to overwrite an existing test\n           // if we were to allow it, we'd do this:\n           //   var re = new RegExp(\"\\\\b(no-)?\" + feature + \"\\\\b\");\n           //   docElement.className = docElement.className.replace( re, '' );\n           // but, no rly, stuff 'em.\n           return Modernizr;\n         }\n\n         test = typeof test == 'function' ? test() : test;\n\n         if (typeof enableClasses !== \"undefined\" && enableClasses) {\n           docElement.className += ' ' + (test ? '' : 'no-') + feature;\n         }\n         Modernizr[feature] = test;\n\n       }\n\n       return Modernizr; // allow chaining.\n     };\n\n\n    // Reset modElem.cssText to nothing to reduce memory footprint.\n    setCss('');\n    modElem = inputElem = null;\n\n    /*>>shiv*/\n    /**\n     * @preserve HTML5 Shiv prev3.7.1 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\n     */\n    ;(function(window, document) {\n        /*jshint evil:true */\n        /** version */\n        var version = '3.7.0';\n\n        /** Preset options */\n        var options = window.html5 || {};\n\n        /** Used to skip problem elements */\n        var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\n\n        /** Not all elements can be cloned in IE **/\n        var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;\n\n        /** Detect whether the browser supports default html5 styles */\n        var supportsHtml5Styles;\n\n        /** Name of the expando, to work with multiple documents or to re-shiv one document */\n        var expando = '_html5shiv';\n\n        /** The id for the the documents expando */\n        var expanID = 0;\n\n        /** Cached data for each document */\n        var expandoData = {};\n\n        /** Detect whether the browser supports unknown elements */\n        var supportsUnknownElements;\n\n        (function() {\n          try {\n            var a = document.createElement('a');\n            a.innerHTML = '<xyz></xyz>';\n            //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\n            supportsHtml5Styles = ('hidden' in a);\n\n            supportsUnknownElements = a.childNodes.length == 1 || (function() {\n              // assign a false positive if unable to shiv\n              (document.createElement)('a');\n              var frag = document.createDocumentFragment();\n              return (\n                typeof frag.cloneNode == 'undefined' ||\n                typeof frag.createDocumentFragment == 'undefined' ||\n                typeof frag.createElement == 'undefined'\n              );\n            }());\n          } catch(e) {\n            // assign a false positive if detection fails => unable to shiv\n            supportsHtml5Styles = true;\n            supportsUnknownElements = true;\n          }\n\n        }());\n\n        /*--------------------------------------------------------------------------*/\n\n        /**\n         * Creates a style sheet with the given CSS text and adds it to the document.\n         * @private\n         * @param {Document} ownerDocument The document.\n         * @param {String} cssText The CSS text.\n         * @returns {StyleSheet} The style element.\n         */\n        function addStyleSheet(ownerDocument, cssText) {\n          var p = ownerDocument.createElement('p'),\n          parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;\n\n          p.innerHTML = 'x<style>' + cssText + '</style>';\n          return parent.insertBefore(p.lastChild, parent.firstChild);\n        }\n\n        /**\n         * Returns the value of `html5.elements` as an array.\n         * @private\n         * @returns {Array} An array of shived element node names.\n         */\n        function getElements() {\n          var elements = html5.elements;\n          return typeof elements == 'string' ? elements.split(' ') : elements;\n        }\n\n        /**\n         * Returns the data associated to the given document\n         * @private\n         * @param {Document} ownerDocument The document.\n         * @returns {Object} An object of data.\n         */\n        function getExpandoData(ownerDocument) {\n          var data = expandoData[ownerDocument[expando]];\n          if (!data) {\n            data = {};\n            expanID++;\n            ownerDocument[expando] = expanID;\n            expandoData[expanID] = data;\n          }\n          return data;\n        }\n\n        /**\n         * returns a shived element for the given nodeName and document\n         * @memberOf html5\n         * @param {String} nodeName name of the element\n         * @param {Document} ownerDocument The context document.\n         * @returns {Object} The shived element.\n         */\n        function createElement(nodeName, ownerDocument, data){\n          if (!ownerDocument) {\n            ownerDocument = document;\n          }\n          if(supportsUnknownElements){\n            return ownerDocument.createElement(nodeName);\n          }\n          if (!data) {\n            data = getExpandoData(ownerDocument);\n          }\n          var node;\n\n          if (data.cache[nodeName]) {\n            node = data.cache[nodeName].cloneNode();\n          } else if (saveClones.test(nodeName)) {\n            node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\n          } else {\n            node = data.createElem(nodeName);\n          }\n\n          // Avoid adding some elements to fragments in IE < 9 because\n          // * Attributes like `name` or `type` cannot be set/changed once an element\n          //   is inserted into a document/fragment\n          // * Link elements with `src` attributes that are inaccessible, as with\n          //   a 403 response, will cause the tab/window to crash\n          // * Script elements appended to fragments will execute when their `src`\n          //   or `text` property is set\n          return node.canHaveChildren && !reSkip.test(nodeName) && !node.tagUrn ? data.frag.appendChild(node) : node;\n        }\n\n        /**\n         * returns a shived DocumentFragment for the given document\n         * @memberOf html5\n         * @param {Document} ownerDocument The context document.\n         * @returns {Object} The shived DocumentFragment.\n         */\n        function createDocumentFragment(ownerDocument, data){\n          if (!ownerDocument) {\n            ownerDocument = document;\n          }\n          if(supportsUnknownElements){\n            return ownerDocument.createDocumentFragment();\n          }\n          data = data || getExpandoData(ownerDocument);\n          var clone = data.frag.cloneNode(),\n          i = 0,\n          elems = getElements(),\n          l = elems.length;\n          for(;i<l;i++){\n            clone.createElement(elems[i]);\n          }\n          return clone;\n        }\n\n        /**\n         * Shivs the `createElement` and `createDocumentFragment` methods of the document.\n         * @private\n         * @param {Document|DocumentFragment} ownerDocument The document.\n         * @param {Object} data of the document.\n         */\n        function shivMethods(ownerDocument, data) {\n          if (!data.cache) {\n            data.cache = {};\n            data.createElem = ownerDocument.createElement;\n            data.createFrag = ownerDocument.createDocumentFragment;\n            data.frag = data.createFrag();\n          }\n\n\n          ownerDocument.createElement = function(nodeName) {\n            //abort shiv\n            if (!html5.shivMethods) {\n              return data.createElem(nodeName);\n            }\n            return createElement(nodeName, ownerDocument, data);\n          };\n\n          ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' +\n                                                          'var n=f.cloneNode(),c=n.createElement;' +\n                                                          'h.shivMethods&&(' +\n                                                          // unroll the `createElement` calls\n                                                          getElements().join().replace(/[\\w\\-]+/g, function(nodeName) {\n            data.createElem(nodeName);\n            data.frag.createElement(nodeName);\n            return 'c(\"' + nodeName + '\")';\n          }) +\n            ');return n}'\n                                                         )(html5, data.frag);\n        }\n\n        /*--------------------------------------------------------------------------*/\n\n        /**\n         * Shivs the given document.\n         * @memberOf html5\n         * @param {Document} ownerDocument The document to shiv.\n         * @returns {Document} The shived document.\n         */\n        function shivDocument(ownerDocument) {\n          if (!ownerDocument) {\n            ownerDocument = document;\n          }\n          var data = getExpandoData(ownerDocument);\n\n          if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\n            data.hasCSS = !!addStyleSheet(ownerDocument,\n                                          // corrects block display not defined in IE6/7/8/9\n                                          'article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}' +\n                                            // adds styling not present in IE6/7/8/9\n                                            'mark{background:#FF0;color:#000}' +\n                                            // hides non-rendered elements\n                                            'template{display:none}'\n                                         );\n          }\n          if (!supportsUnknownElements) {\n            shivMethods(ownerDocument, data);\n          }\n          return ownerDocument;\n        }\n\n        /*--------------------------------------------------------------------------*/\n\n        /**\n         * The `html5` object is exposed so that more elements can be shived and\n         * existing shiving can be detected on iframes.\n         * @type Object\n         * @example\n         *\n         * // options can be changed before the script is included\n         * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\n         */\n        var html5 = {\n\n          /**\n           * An array or space separated string of node names of the elements to shiv.\n           * @memberOf html5\n           * @type Array|String\n           */\n          'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output progress section summary template time video',\n\n          /**\n           * current version of html5shiv\n           */\n          'version': version,\n\n          /**\n           * A flag to indicate that the HTML5 style sheet should be inserted.\n           * @memberOf html5\n           * @type Boolean\n           */\n          'shivCSS': (options.shivCSS !== false),\n\n          /**\n           * Is equal to true if a browser supports creating unknown/HTML5 elements\n           * @memberOf html5\n           * @type boolean\n           */\n          'supportsUnknownElements': supportsUnknownElements,\n\n          /**\n           * A flag to indicate that the document's `createElement` and `createDocumentFragment`\n           * methods should be overwritten.\n           * @memberOf html5\n           * @type Boolean\n           */\n          'shivMethods': (options.shivMethods !== false),\n\n          /**\n           * A string to describe the type of `html5` object (\"default\" or \"default print\").\n           * @memberOf html5\n           * @type String\n           */\n          'type': 'default',\n\n          // shivs the document according to the specified `html5` object options\n          'shivDocument': shivDocument,\n\n          //creates a shived element\n          createElement: createElement,\n\n          //creates a shived documentFragment\n          createDocumentFragment: createDocumentFragment\n        };\n\n        /*--------------------------------------------------------------------------*/\n\n        // expose html5\n        window.html5 = html5;\n\n        // shiv the document\n        shivDocument(document);\n\n    }(this, document));\n    /*>>shiv*/\n\n    // Assign private properties to the return object with prefix\n    Modernizr._version      = version;\n\n    // expose these for the plugin API. Look in the source for how to join() them against your input\n    /*>>prefixes*/\n    Modernizr._prefixes     = prefixes;\n    /*>>prefixes*/\n    /*>>domprefixes*/\n    Modernizr._domPrefixes  = domPrefixes;\n    Modernizr._cssomPrefixes  = cssomPrefixes;\n    /*>>domprefixes*/\n\n    /*>>mq*/\n    // Modernizr.mq tests a given media query, live against the current state of the window\n    // A few important notes:\n    //   * If a browser does not support media queries at all (eg. oldIE) the mq() will always return false\n    //   * A max-width or orientation query will be evaluated against the current state, which may change later.\n    //   * You must specify values. Eg. If you are testing support for the min-width media query use:\n    //       Modernizr.mq('(min-width:0)')\n    // usage:\n    // Modernizr.mq('only screen and (max-width:768)')\n    Modernizr.mq            = testMediaQuery;\n    /*>>mq*/\n\n    /*>>hasevent*/\n    // Modernizr.hasEvent() detects support for a given event, with an optional element to test on\n    // Modernizr.hasEvent('gesturestart', elem)\n    Modernizr.hasEvent      = isEventSupported;\n    /*>>hasevent*/\n\n    /*>>testprop*/\n    // Modernizr.testProp() investigates whether a given style property is recognized\n    // Note that the property names must be provided in the camelCase variant.\n    // Modernizr.testProp('pointerEvents')\n    Modernizr.testProp      = function(prop){\n        return testProps([prop]);\n    };\n    /*>>testprop*/\n\n    /*>>testallprops*/\n    // Modernizr.testAllProps() investigates whether a given style property,\n    //   or any of its vendor-prefixed variants, is recognized\n    // Note that the property names must be provided in the camelCase variant.\n    // Modernizr.testAllProps('boxSizing')\n    Modernizr.testAllProps  = testPropsAll;\n    /*>>testallprops*/\n\n\n    /*>>teststyles*/\n    // Modernizr.testStyles() allows you to add custom styles to the document and test an element afterwards\n    // Modernizr.testStyles('#modernizr { position:absolute }', function(elem, rule){ ... })\n    Modernizr.testStyles    = injectElementWithStyles;\n    /*>>teststyles*/\n\n\n    /*>>prefixed*/\n    // Modernizr.prefixed() returns the prefixed or nonprefixed property name variant of your input\n    // Modernizr.prefixed('boxSizing') // 'MozBoxSizing'\n\n    // Properties must be passed as dom-style camelcase, rather than `box-sizing` hypentated style.\n    // Return values will also be the camelCase variant, if you need to translate that to hypenated style use:\n    //\n    //     str.replace(/([A-Z])/g, function(str,m1){ return '-' + m1.toLowerCase(); }).replace(/^ms-/,'-ms-');\n\n    // If you're trying to ascertain which transition end event to bind to, you might do something like...\n    //\n    //     var transEndEventNames = {\n    //       'WebkitTransition' : 'webkitTransitionEnd',\n    //       'MozTransition'    : 'transitionend',\n    //       'OTransition'      : 'oTransitionEnd',\n    //       'msTransition'     : 'MSTransitionEnd',\n    //       'transition'       : 'transitionend'\n    //     },\n    //     transEndEventName = transEndEventNames[ Modernizr.prefixed('transition') ];\n\n    Modernizr.prefixed      = function(prop, obj, elem){\n      if(!obj) {\n        return testPropsAll(prop, 'pfx');\n      } else {\n        // Testing DOM property e.g. Modernizr.prefixed('requestAnimationFrame', window) // 'mozRequestAnimationFrame'\n        return testPropsAll(prop, obj, elem);\n      }\n    };\n    /*>>prefixed*/\n\n\n    /*>>cssclasses*/\n    // Remove \"no-js\" class from <html> element, if it exists:\n    docElement.className = docElement.className.replace(/(^|\\s)no-js(\\s|$)/, '$1$2') +\n\n                            // Add the new classes to the <html> element.\n                            (enableClasses ? ' js ' + classes.join(' ') : '');\n    /*>>cssclasses*/\n\n    return Modernizr;\n\n})(this, this.document);\n\n/*!\nloadCSS: load a CSS file asynchronously.\n[c]2014 @scottjehl, Filament Group, Inc.\nLicensed MIT\n*/\nfunction loadCSS( href, before, media, callback ){\n  'use strict';\n  // Arguments explained:\n  // `href` is the URL for your CSS file.\n  // `before` optionally defines the element we'll use as a reference for injecting our <link>\n  // By default, `before` uses the first <script> element in the page.\n  // However, since the order in which stylesheets are referenced matters, you might need a more specific location in your document.\n  // If so, pass a different reference element to the `before` argument and it'll insert before that instead\n  // note: `insertBefore` is used instead of `appendChild`, for safety re: http://www.paulirish.com/2011/surefire-dom-element-insertion/\n  var ss = window.document.createElement( 'link' );\n  var ref = before || window.document.getElementsByTagName( 'script' )[ 0 ];\n  var sheets = window.document.styleSheets;\n  ss.rel = 'stylesheet';\n  ss.href = href;\n  // temporarily, set media to something non-matching to ensure it'll fetch without blocking render\n  ss.media = 'only x';\n  ss.onload = callback || function() {};\n  // inject link\n  ref.parentNode.insertBefore( ss, ref );\n  // This function sets the link's media back to `all` so that the stylesheet applies once it loads\n  // It is designed to poll until document.styleSheets includes the new sheet.\n  function toggleMedia(){\n    var defined;\n    for( var i = 0; i < sheets.length; i++ ){\n      if( sheets[ i ].href && sheets[ i ].href.indexOf( href ) > -1 ){\n        defined = true;\n      }\n    }\n    if( defined ){\n      ss.media = media || 'all';\n    }\n    else {\n      setTimeout( toggleMedia );\n    }\n  }\n  toggleMedia();\n  return ss;\n}"],"sourceRoot":"/source/"}